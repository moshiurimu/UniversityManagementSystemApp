@using Microsoft.Ajax.Utilities
@model UniversityManagementSystemApp.Models.CourseAssign

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CourseAssign</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "DepartmentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepartmentId", null,"Select a Department" ,htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherId, "TeacherId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("TeacherId", null, htmlAttributes: new { @class = "form-control" })*@
                <select class="form-control" name="TeacherId" id="TeacherId">
                    
                </select>
                @*@Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })*@
            </div>
        </div>
        
        <div class="form-group">
            @Html.Label("Assign to be taken", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model=> model.Teacher.Credit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Teacher.Credit, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.Label("Remaining", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Teacher.Credit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Teacher.Credit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "Course", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", null,"--Select--" ,htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Course.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Credit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Credit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Credit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function() {
            $("#CourseId").change(function () {
                var optionSelected = $(this).find("option:selected");
                var courseId = optionSelected.val();
                var mydata = { courseId: courseId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCourseInfo", "CourseAssigns")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(mydata),
                    dataType: "json",
                    success: function (data) {

                        $("#Course_Name").val(data.Name);
                        $("#Credit").val(data.Credit);

                    },
                });
            });
            
            $("#DepartmentId").change(function () {
                var optionSelected = $(this).find("option:selected");
                var depId = optionSelected.val();
                var mydata = { departmentId: depId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetAllTeacher", "CourseAssigns")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(mydata),
                    dataType: "json",
                    success: function (data) {
                        
                        
                        var mySelect = $('#TeacherId');
                        $.each(data, function (val, text) {
                            mySelect.append(
                                $('<option></option>').val(text.TeacherId).html(text.Name)
                            );
                        });
                      
                    },
                });
            });
        });
    </script>
    

}
